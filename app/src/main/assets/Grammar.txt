Program         ::= { Declaration }

Declaration     ::= ClassDecl | FunctionDecl | Statement

ClassDecl       ::= "class" Identifier "{" { Declaration } "}"

FunctionDecl    ::= "function" Datatype Identifier "(" ")" "{" { Statement } "}"

Statement       ::= IfStatement
                 | WhileStatement
                 | ForStatement
                 | ReturnStatement
                 | PrintStatement
                 | VarDecl ";"
                 | ExpressionStatement

IfStatement     ::= "if" "(" Expression ")" "{" { Statement } "}" [ "else" "{" { Statement } "}" ]

WhileStatement  ::= "while" "(" Expression ")" "{" { Statement } "}"

ForStatement    ::= "for" "(" [VarDecl | Expression] ";" Expression? ";" Expression? ")" "{" { Statement } "}"

ReturnStatement ::= "return" [ Expression ] ";"

PrintStatement  ::= "writeln" "(" Expression ")" ";"

VarDecl         ::= Datatype Identifier [ "=" Expression ]

ExpressionStatement ::= Expression ";"

Expression      ::= Assignment

Assignment      ::= LogicalOr [ "=" Assignment ]
                 | LogicalOr

LogicalOr       ::= LogicalAnd { "||" LogicalAnd }

LogicalAnd      ::= Equality { "&&" Equality }

Equality        ::= Comparison { ("==" | "!=") Comparison }

Comparison      ::= Term { (">" | ">=" | "<" | "<=") Term }

Term            ::= Factor { ("+" | "-") Factor }

Factor          ::= Unary { ("*" | "/" | "%") Unary }

Unary           ::= ( "!" | "-" ) Unary
                 | Primary

Primary         ::= Identifier
                 | Literal
                 | "(" Expression ")"
                 | BooleanLiteral

Literal         ::= INTEGER | FLOAT | STRING

BooleanLiteral  ::= "true" | "false"